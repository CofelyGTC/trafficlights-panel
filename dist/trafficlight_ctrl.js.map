{"version":3,"sources":["../src/trafficlight_ctrl.js"],"names":["MetricsPanelCtrl","moment","_","TimeSeries","stringToJsRegex","panelDefaults","bgColor","trafficLightSettings","lightsPerLine","width","invertScale","showValue","useDiffAsColor","showTrend","trendAsPercentage","absThreshold","redThreshold","greenThreshold","noValueNumber","max","fontSize","fontColor","units","digits","transformationDict","spreadControls","sortLights","renderLink","linkUrl","linkTooltip","linkTargetBlank","TrafficLightCtrl","$scope","$injector","templateSrv","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","onRender","onDataReceived","onDataError","percentPerLight","data","updateTraffics","series","applyRegex","regexPattern","seriesList","length","i","undefined","regexVal","id","test","toString","temp","exec","extractedtxt","slice","forEach","value","name","label","dataList","newseries","transHt","split","tra","cols","map","seriesHandler","newserie","datapoints","trend","trendClass","realvalue","curvalue","Math","abs","push","e","rows","sortBy","o","replace","orderBy","seriesData","alias","target","addEditorTab","$timeout","cancel","nextTickPromise","link","scopedVars","format","scoped","key","trafficsperline","lines","metrics","scope","elem","attrs","ctrl","$panelContainer","find","css","setTimeout","renderingCompleted","templateUrl"],"mappings":"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","file":"trafficlight_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series';\n\nimport './css/trafficlight-panel.css!';\nimport { stringToJsRegex } from '@grafana/data';\n\nconst panelDefaults = {\n  bgColor: null\n  , trafficLightSettings:\n  {\n    lightsPerLine: 5,\n    width: 20,\n    invertScale: false,\n    showValue: true,\n    useDiffAsColor: false,\n    showTrend: true,\n    trendAsPercentage: false,\n    absThreshold: false,\n    redThreshold: 20,\n    greenThreshold: 80,\n    noValueNumber: null,\n    max: 100,\n    fontSize: '12px',\n    fontColor: 'black',\n    units: '',\n    digits: 1,\n    transformationDict: 'source1=target1;source2=target2',\n    spreadControls: false,\n    sortLights: false,\n    renderLink: false,\n    linkUrl: \"\",\n    linkTooltip: \"\",\n    linkTargetBlank: false\n  }\n};\n\n\n\nexport class TrafficLightCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, templateSrv) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.percentPerLight = 100;\n\n    this.data = []\n    this.templateSrv = templateSrv\n    this.updateTraffics();\n  }\n\n\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    //this.data = this.parseSeries(this.series);\n    this.applyRegex();\n  }\n  applyRegex() {\n    if (this.panel.trafficLightSettings.regexPattern !== '') {\n      let seriesList = this.series;\n      if (seriesList && seriesList.length > 0) {\n        for (let i = 0; i < seriesList.length; i++) {\n          if (this.panel.trafficLightSettings.regexPattern !== '' && this.panel.trafficLightSettings.regexPattern !== undefined) {\n            const regexVal = stringToJsRegex(this.panel.trafficLightSettings.regexPattern);\n            if (seriesList[i].id && regexVal.test(seriesList[i].id.toString())) {\n              const temp = regexVal.exec(seriesList[i].id.toString());\n              if (!temp) {\n                continue;\n              }\n              let extractedtxt = '';\n              if (temp.length > 1) {\n                temp.slice(1).forEach((value, i) => {\n                  if (value) {\n                    extractedtxt += extractedtxt.length > 0 ? ' ' + value.toString() : value.toString();\n                  }\n                });\n                this.data[i].name = extractedtxt;\n              }\n            }\n            else {\n              this.data[i].name = seriesList[i].id;\n              seriesList[i].label = seriesList[i].id;\n\n            }\n          }\n          else {\n            this.data[i].name = seriesList[i].id;\n            seriesList[i].label = seriesList[i].id;\n\n          }\n        }\n      }\n    }\n  }\n\n\n\n  onDataReceived(dataList) {\n    var newseries = []\n    var transformationDict = this.panel.trafficLightSettings.transformationDict;\n\n    var transHt = {}\n\n    for (var tra of transformationDict.split(';')) {\n      var cols = tra.split('=');\n      if (cols.length >= 2) {\n        transHt[cols[0]] = cols[1]\n      }\n    }\n    try {\n      this.series = dataList.map(this.seriesHandler.bind(this));\n\n\n\n      for (var i = 0; i < this.series.length; i++) {\n        var newserie = {\n          \"name\": this.series[i].label,\n          \"value\": this.series[i].datapoints.slice(-1)[0][0]\n        }\n\n        if (this.series[i].datapoints.length > 1) {\n          if (this.panel.trafficLightSettings.trendAsPercentage === true)\n            newserie.trend = (100 * (newserie.value - this.series[i].datapoints.slice(-2)[0][0]) / (this.series[i].datapoints.slice(-2)[0][0]))\n          else\n            newserie.trend = newserie.value - this.series[i].datapoints.slice(-2)[0][0]\n\n\n          if (newserie.trend > 0)\n            if (this.panel.trafficLightSettings.invertScale)\n              newserie.trendClass = 'traffic-light-trend-bad'\n            else\n              newserie.trendClass = 'traffic-light-trend-good'\n          else if (newserie.trend < 0)\n            if (this.panel.trafficLightSettings.invertScale)\n              newserie.trendClass = 'traffic-light-trend-good'\n            else\n              newserie.trendClass = 'traffic-light-trend-bad'\n          else\n            newserie.trendClass = 'traffic-light-trend-neutral'\n        }\n        newserie.realvalue = newserie.value;\n        if (this.panel.trafficLightSettings.useDiffAsColor)\n          newserie.value = newserie.trend;\n\n        if (this.panel.trafficLightSettings.absThreshold) {\n          var curvalue = Math.abs(newserie.trend)\n          newserie.trendClass = 'traffic-light-trend-good-nobef'\n          if (curvalue > this.panel.trafficLightSettings.greenThreshold) {\n            newserie.trendClass = 'traffic-light-trend-bad'\n          }\n          else if (curvalue > this.panel.trafficLightSettings.redThreshold) {\n            newserie.trendClass = 'traffic-light-trend-neutral'\n\n          }\n        }\n\n\n        if (transHt[newserie[\"name\"]])\n          newserie[\"tname\"] = transHt[newserie[\"name\"]]\n        else\n          newserie[\"tname\"] = newserie[\"name\"]\n        newseries.push(newserie);\n      }\n\n    }\n    catch (e) {\n      // This is not a time serie\n      this.series = [];\n      for (var i = 0; i < dataList[0].rows.length; i++) {\n        var newserie = {\n          \"name\": dataList[0].rows[i][0],\n          \"value\": dataList[0].rows[i][1],\n          \"realvalue\": dataList[0].rows[i][1]\n        }\n\n        if (transHt[newserie[\"name\"]])\n          newserie[\"tname\"] = transHt[newserie[\"name\"]]\n        else\n          newserie[\"tname\"] = newserie[\"name\"]\n\n        newseries.push(newserie);\n      }\n    }\n\n\n\n\n    if (this.panel.trafficLightSettings.sortLights) {\n      this.data = _.sortBy(newseries, [function (o) { return o.name.replace(\":\", \"\").replace(\" \", \"\").replace(\"}\", \"\").replace(\"{\", \"\") }]);\n    }\n    else {\n      if (this.panel.trafficLightSettings.invertScale)\n        this.data = _.orderBy(newseries, 'value', 'desc');\n      else\n        this.data = _.orderBy(newseries, 'value', 'asc');\n    }\n    this.applyRegex();\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n    return series;\n  }\n\n  onInitEditMode() {\n\n    this.addEditorTab('Options', 'public/plugins/snuids-trafficlights-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  renderLink(link, scopedVars, format) {\n    var scoped = {}\n    for (var key in scopedVars) {\n      scoped[key] = { value: scopedVars[key] }\n    }\n    if (format) {\n      return this.templateSrv.replace(link, scoped, format)\n    } else {\n      return this.templateSrv.replace(link, scoped)\n    }\n  }\n\n  updateTraffics() {\n\n    var trafficsperline = this.panel.trafficLightSettings.lightsPerLine;\n\n    if (this.panel.trafficLightSettings.spreadControls) {\n      trafficsperline = this.data.length;\n      if (this.data.length == 0)\n        trafficsperline = 1;\n      this.percentPerLight = 100 / trafficsperline;\n    }\n    else\n      this.percentPerLight = 100 / trafficsperline;\n\n    this.lines = [];\n    var metrics = [];\n    for (var i = 0; i < this.data.length; i++) {\n      if ((i % trafficsperline) == 0) {\n        metrics = [];\n        this.lines.push(metrics);\n      }\n      metrics.push(this.data[i]);\n    }\n    this.nextTickPromise = this.$timeout(this.updateTraffics.bind(this), 1000);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n      setTimeout(() => ctrl.renderingCompleted(), 1250);\n    });\n  }\n}\n\nTrafficLightCtrl.templateUrl = 'module.html';\n"]}